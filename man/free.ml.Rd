% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin.R
\name{free.ml}
\alias{free.ml}
\title{Midline estimations for closed contours}
\usage{
free.ml(out = NULL, smooth.n = NULL)
}
\arguments{
\item{out}{a matrix of named x,y values describing a closed outline (contour)}

\item{smooth.n}{the number of smoothing iterations. See Detail}
}
\value{
A list with the following components:

\code{ml}: a data table consisting of the x,y coordinates of the midline and their index value

\code{cont.sm}: a data table containing the smoothed outline according to \code{coo_smooth}. If 'smooth.n=0', this will be identical to the input 'out'.
}
\description{
Internal function used in \code{kin} functions for calculating a midline spanning a closed contour.
}
\details{
The midline is determine by first finding the tips of the contour (i.e., the two coordinates in the outline that are farthest from one another) with \code{\link{coo_truss}} and therefore assumes the contour is elongate. The function then bisects the contour across this axis using \code{\link{coo_slice}}, giving it two sides with coordinates of equal length. The midline is calculated as the midpoints defined between all pairs of coordinates with the same index value.

'smooth.n' is passed to the 'n' parameter of \code{\link{coo_smooth}}, which smooths coordinates using a simple moving average.
}
\examples{
require(Momocs)
o <- Momocs::nsfishes$coo[[136]]
colnames(o) <- c("x","y")
plot(o[,1],o[,2])
fml <- free.ml(o,smooth.n=0)
points(fml$ml$x,fml$ml$y,col="red")
#note the difference
fml2 <- free.ml(o,smooth.n=10)
points(fml2$ml$x,fml2$ml$y,col="blue")
}
\seealso{
\code{\link{coo_smooth}}, \code{\link{coo_slice}},\code{\link{coo_slide}}, \code{\link{coo_truss}}, \code{\link{kin.free}}
}
