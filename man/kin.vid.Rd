% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin.R
\name{kin.vid}
\alias{kin.vid}
\title{Naive midline detection from video data}
\usage{
kin.vid(vid.path = NULL, ...)
}
\arguments{
\item{vid.path}{Character; path of video to be analyze.}

\item{...}{other arguments to be passed to \code{kin.img} and \code{vid.to.images}}
}
\value{
Returns the components of \code{kin.img}
}
\description{
A wrapper, decomposing videos with \code{vid.to.images} to frames for naive retrieval of midlines from the larges ROI using \code{kin.img}.
}
\details{
By default, images are outputted to an "images" subdirectory in the working directory.

\code{image.type} Can be set as "orig" or "bin". "orig" plots midline and reference lines over the orginal video frames, "bin" over binary images.
\code{n.blob} May be useful if there are other highly contrasted ROIs in the frame.

\code{make.video} If "TRUE" a video of the same names as \code{video.name} is outputted in the working directory.

\code{rem.file} If "TRUE", \code{make.video} is also "TRUE" a video of processed images is still produced.

Assumes images are appended with a numeric sequence.
}
\examples{
#produce a classic midline waveform plot of swimming fish

require(wesanderson)
require(ggplot2)
require(plyr)

#download an example video (7.5 MB) and place in working directory
f <- "https://github.com/ckenaley/exampledata/blob/master/trout1_63_test.avi?raw=true"
download.file(f, file.path(getwd(), "trout1_63_test.avi"), method = "libcurl")
kin <- kin.vid(vid.path ="trout1_63_test.avi",thr=0.7,frames=1:20,frame.rate=10)

ml <- kin$midline
#normalize x (y is normalized to midline by "kin.img/kin.vid")
ml <- ddply(ml,.(frame),transform,x2=x-x[1])

#compute instantaneous amplitude of tail (last/rightmost point) and wave crest x position  by frame
ml2 <- ddply(ml,.(frame),summarize,amp.i=last(wave.y))

ml <- merge(ml,ml2,by="frame") #merge these

pal <- wes_palette("Zissou1", 100, type = "continuous") #"Zissou" color palette
p <- ggplot(dat=ml,aes(x=x2,y=wave.y))+theme_classic(15)+scale_color_gradientn(colours = pal)
p+geom_line(aes(group=frame,color=amp.i),stat="smooth",method = "loess", size = 1.5,alpha = 0.5)

}
\seealso{
\code{\link{kin.img}} \code{\link{kin.vid2}}
}
