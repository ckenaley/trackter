% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin2.R
\docType{data}
\name{frames}
\alias{frames}
\title{Retrives the midline of an ROI from an image sequence.}
\format{An object of class \code{integer} of length 10.}
\usage{
frames
}
\arguments{
\item{image.dir}{Directory containing images to analyze.}

\item{frames}{numeric vectors indicating which images to process.}

\item{thr}{numeric, threshhold to determine binary image. May require some tweeking through iteration.}

\item{plot.midline}{logical value indicating if outputted images should inclued plotted midline and reference line.}

\item{smooth}{numeric; smoothing parameter value for plotted midline}

\item{image.type}{character; the type of image to be outputted.}

\item{flip}{logical, indicating if binary should be flipped.}

\item{show.prog}{logical value indicating if outputted image should be displayed during analysis.}

\item{n.blob}{numeric, indicating which nth largest ROI is the ROI to be analyzed. May require tweeking through interation.}

\item{make.video}{logical value indicating if a video should be saved of midline position overlaying origina frames.}

\item{qual}{numeric; quality of the outputted video from 1-100\%. Defaults to 50\%.}

\item{ant.per}{numeric; left-most percentage of ROI that establishes the vertical reference for the midline displacement.}

\item{frame.rate}{numeric; outputted video frame rate in fps.}

\item{rem.file}{logical value indicating if the outputted images, both from the original video and images with midline overlay, should be deleted.}
}
\value{
A list with the following components:

\code{kin.dat} a data frame consisting of position paramters for the ROI indicated by \code{n.blob}:\itemize{
\item the frame number
\item "head.x" and "head.y": the x and y position of the head (leftmost or anteriormost)
\item "x" and ""y": the position of the tail (rightmost or posteriormost)
\item "amp": the amplitude (\code{amp}) of the tail
\item "head.pval": p values of the \code{lm()} fit that describes the position of the head as determined by \code{ant.per} (green points in the outputted images/video)}

\code{midline} A data frame containing, for each frame described by \code{frames}, the following: \itemize{
\item "x" and "y.m": x and y positions of the midline of the ROI
\item "mid.pred": the predicted linear midline based on the points/pixels defined by \code{head.per} (green points in the outputted images/video)
\item "y.pred": midline points fit to a loess smoothing model with span equal to \code{smooth} (red curve in the outputted images/video)
\item "wave.y": midline points "y.pred" normalized to "mid.pred"}

 \code{head.lms}  "lm" objects, one for each frame desribed by \code{frames} of the linear model fit to the \code{ant.per} section of the ROI
}
\description{
Retrives the midline of an ROI from an image sequence.
}
\details{
By default, images are outputted to the \code{image.dir} subdirectory in the working directory.

\code{image.type} Can be set as "orig" or "bin". "orig" plots midline and reference lines over the orginal video frames, "bin" over binary images.
\code{n.blob} May be useful if there are other highly contrasted ROIs in the frame.

\code{make.video} If "TRUE" a vidoe of the same names as \code{video.name} is outputted in a \code{image.dir} subdirectory.

\code{rem.file} If "TRUE", \code{make.video} is also "TRUE" a video of processed images is still produced.
}
\examples{
#produce a classic midline waveform plot of swimming fish
require(wesanderson)
require(ggplot2)
require(data.table)
require(dplyr)
require(EBImage)


#download example images and place in "example" subdirectory
f <- "https://github.com/ckenaley/exampledata/blob/master/example.zip?raw=true"
download.file(f,"temp.zip")
unzip("temp.zip")
unlink("temp.zip")
kin <- kin.img2(image.dir=paste0(getwd(),"/example"),thr=0.7,frames=1:50,smooth=0.5)
ml <- kin$midline
#normalize x (y is normalized to midline by "kin.img/kin.vid")
ml <- ddply(ml,.(frame),transform,x2=x-x[1])

#compute instantaneous amplitude of tail (last/rightmost point) and wave crest x position  by frame
ml2 <- ddply(ml,.(frame),summarize,amp.i=abs(last(wave.y)))

ml <- merge(ml,ml2,by="frame") #merge these

pal <- wes_palette("Zissou1", 100, type = "continuous") #"Zissou" color palette
p <- ggplot(dat=ml,aes(x=x2,y=wave.y))+theme_classic(15)+scale_color_gradientn(colours = pal)
p <- p+geom_line(aes(group=frame,color=amp.i),stat="smooth",method = "loess", size = 1.5,alpha = 0.5)
}
\seealso{
\code{\link{kin.vid}}
}
\keyword{datasets}
