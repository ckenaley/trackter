% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin2.R
\name{kin.img2}
\alias{kin.img2}
\title{Automatically retrives the midline of a detected ROI in each image of a sequenced based on undulating ROI.}
\usage{
kin.img2(image.dir = NULL, frames = NULL, thr = 0.7,
  plot.midline = TRUE, show.prog = FALSE, ant.per = 0.15, smooth = 0.2,
  image.type = "orig", flip = TRUE, rem.file = TRUE, make.video = TRUE,
  qual = 50, frame.rate = 10, n.blob = NULL, search.for = "offset",
  shape = "long")
}
\arguments{
\item{image.dir}{Directory containing images to analyze.}

\item{frames}{numeric vectors indicating which images to process.}

\item{thr}{numeric, threshhold to determine binary image. May require some tweeking through iteration.}

\item{plot.midline}{logical value indicating if outputted images should inclued plotted midline and reference line.}

\item{show.prog}{logical value indicating if outputted image should be displayed during analysis.}

\item{ant.per}{numeric; left-most percentage of ROI that establishes the vertical reference for the midline displacement.}

\item{smooth}{numeric; smoothing parameter value for plotted midline}

\item{image.type}{character; the type of image to be outputted.}

\item{flip}{logical, indicating if binary should be flipped.}

\item{rem.file}{logical value indicating if the outputted images, both from the original video and images with midline overlay, should be deleted.}

\item{make.video}{logical value indicating if a video should be saved of midline position overlaying origina frames.}

\item{qual}{numeric; quality of the outputted video from 1-100\%. Defaults to 50\%.}

\item{frame.rate}{numeric; outputted video frame rate in fps.}

\item{n.blob}{numeric, indicating which nth largest ROI is the ROI to be analyzed. May require tweeking through interation. Perhaps best to let the function choose by using "searchl.for".}

\item{search.for}{character; the search parameter: "offset" the ROI closest to the midpoint of the field, "shape" with search of a shape, "largest" the largest roi (equivalent to n.blob=1)}

\item{shape}{character; another search paramer; if search.for is set to "shape", "long" will attempt to find an ROI that has an aspect ratio greater than 2}
}
\description{
Automatically retrives the midline of a detected ROI in each image of a sequenced based on undulating ROI.
}
\details{
By default, images are outputted to the \code{image.dir} subdirectory in the working directory. Chooses ROIs that are big (>5\% of the pixel field) and identifies the one with the largest variance to the trailing edge amplitude (i.e., assumes that ROI is the one moving).

\code{image.type} Can be set as "orig" or "bin". "orig" plots midline and reference lines over the orginal video frames, "bin" over binary images.
\code{n.blob} May be useful if there are other highly contrasted ROIs in the frame.

\code{make.video} If "TRUE" a vidoe of the same names as \code{video.name} is outputted in a \code{image.dir} subdirectory.

\code{rem.file} If "TRUE", \code{make.video} is also "TRUE" a video of processed images is still produced.
}
\examples{
#produce a classic midline waveform plot of swimming fish
require(wesanderson)
require(ggplot2)
require(data.table)
require(dplyr)
require(EBImage)

#download example images and place in "example" subdirectory
f <- "https://github.com/ckenaley/exampledata/blob/master/example.zip?raw=true"
download.file(f,"temp.zip")
unzip("temp.zip")
unlink("temp.zip")
kin <- kin.img2(image.dir=paste0(getwd(),"/example"),thr=0.7,frames=1:10,smooth=0.5,show.prog=T)
ml <- kin$midline
#normalize x (y is normalized to midline by "kin.img/kin.vid")
ml <- ddply(ml,.(frame),transform,x2=x-x[1])

#compute instantaneous amplitude of tail (last/rightmost point) and wave crest x position  by frame
ml2 <- ddply(ml,.(frame),summarize,amp.i=abs(last(wave.y)))

ml <- merge(ml,ml2,by="frame") #merge these

pal <- wes_palette("Zissou1", 100, type = "continuous") #"Zissou" color palette
p <- ggplot(dat=ml,aes(x=x2,y=wave.y))+theme_classic(15)+scale_color_gradientn(colours = pal)
p <- p+geom_line(aes(group=frame,color=amp.i),stat="smooth",method = "loess", size = 1.5,alpha = 0.5)
print(p)
}
\seealso{
\code{\link{kin.vid}}
}
