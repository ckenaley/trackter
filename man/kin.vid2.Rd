% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin2.R
\name{kin.vid2}
\alias{kin.vid2}
\title{Midline detection from video data}
\usage{
kin.vid2(kin.args, vid.args)
}
\arguments{
\item{kin.args}{list; arguments to be passed to \code{kin.img2}}

\item{vid.args}{list; arguments to be passed to \code{vid.to.images2}}
}
\value{
Returns the components of \code{kin.img2}
}
\description{
A wrapper, decomposing videos with \code{vid.to.images2} to frames for automatical retrieval of ROI midlines using \code{kin.img2}.
}
\details{
By default, images are outputted to an 'images' subdirectory in the working directory and processed images to a 'processed_images' subdirectory.
}
\examples{
produce a classic midline waveform plot of swimming fish
\dontrun{
require(wesanderson)
require(ggplot2)
require(dplyr)

#download an example video (7.5 MB) and place in working directory
f <- "https://github.com/ckenaley/exampledata/blob/master/trout1_63_test.avi?raw=true"
download.file(f, file.path(getwd(), "trout1_63_test.avi"), method = "libcurl")
kin <- kin.vid2(vid.args=list(vid.path ="trout1_63_test.avi",silent=TRUE),kin.args=list(thr=0.7,frames=1:10,frame.rate=10,sequenced=TRUE,rem.file=F))

ml <- kin$midline
#normalize x (y is normalized to midline by "kin.img/kin.vid")
ml <- ddply(ml,.(frame),transform,x2=x-x[1])

#compute instantaneous amplitude of tail (last/rightmost point) and wave crest x position  by frame
ml2 <- ddply(ml,.(frame),summarize,amp.i=last(wave.y))

ml <- merge(ml,ml2,by="frame") #merge these

pal <- wes_palette("Zissou1", 100, type = "continuous") #"Zissou" color palette
p <- ggplot(dat=ml,aes(x=x2,y=wave.y))+theme_classic(15)+scale_color_gradientn(colours = pal)
p+geom_line(aes(group=frame,color=amp.i),stat="smooth",method = "loess", size = 1.5,alpha = 0.5)
}
}
\seealso{
\code{\link{kin.img2}}, \code{\link{vid.to.images2}}
}
